:root {
    --primary-light:#8abdff;
    --primary: #6d5dfc;
    --primary-dark: #5b0eeb;
    --white: #fff;
    --greyLight-1: #E4EBF5;
    --greyLight-2: #c8d0e7;
    --greyLight-3: #bec8e4;
    --greyDark: #9baacf;
}
/* 通配符样式 */
*,*::before,*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}
html {
    box-sizing: border-box;
    /* 100%=16px */
    font-size: 62.5%;
    overflow-y: scroll;
    background: var(--greyLight-1);

}
@media screen and (min-width:900px) {
    html {
        font-size: 75%;

    }
}

.inset_shadow {
    box-shadow:  inset .2rem .2rem .5rem var(--greyLight-2), 
    inset -.2rem -.2rem .5rem var(--white);
}
.container {
    /* 能够设置元素的最小高度。这样能够防止 height 属性的应用值小于 min-height 的值。 */
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: 'Poppins',sans-serif;
    background-color: var(--greyLight-1);

}
/* 大网格 */
.components {
    width: 75rem;
    height: 40rem;
    border-radius: 3rem;
    box-shadow: .8rem .8rem 1.4rem var(--greyLight-2),-.2rem -.2rem 1.8rem var(--white);
    padding: 4rem;
    display: grid;
    grid-template-columns: 17.6rem 19rem 20.4rem;
    grid-template-rows: repeat(autofit,min-content);
    grid-column-gap: 5rem;
    grid-row-gap: 2.5rem;
    align-items: center;
}
/*Switch小网格*/
.switch {
    display: grid;
    grid-column: 1/2;
    grid-template-columns: repeat(2,min-content);
    grid-gap: 3rem;
    justify-self: center;

}
.switch input{
    display: none;
}
.switch_1,.switch_2 {
    width: 6rem;
}
.switch_1 label,.switch_2 label {
    display: flex;
    box-shadow:.3rem .3rem .6rem var(--greyLight-2), 
    -.2rem -.2rem .5rem var(--white);
    align-items: center;
    width: 100%;
    height: 3rem;
    background: rgba(255,255,255,0);
    position: relative;
    cursor: pointer;
    border-radius: 1.6rem;

}
.switch_1 label::before, .switch_2 label::before {
    content: '';
    width: 100%;
    height: 100%;
    border-radius: inherit;
    background: linear-gradient(330deg,var(--primary-light) 0%,var(--primary) 50%,var(--primary-light) 100%);
    opacity: 0;
    transition: all .4s ease;

}
.switch_1 label::after,.switch_2 label::after {
    content: '';
    position: absolute;
    left: .4rem;
    width: 2.1rem;
    height: 2.1rem;
    border-radius: 50%;
    background: var(--greyDark);
    transition: all .4s ease;

}
.switch input:checked~label::before{
    opacity: 1;
   
}
.switch input:checked~label::after{
    left: 57%;
    background: var(--greyLight-1);
  
}
.checkbox {
    grid-column: 1/2;
    display: grid;
    grid-template-columns: repeat(2,1fr);
    grid-gap: 3rem;
    justify-content: center;
}
.checkbox input {
    display: none;
}
.checkbox_1,.checkbox_2 {
    width: 6rem;
    display: flex;
    justify-content: center;
}
.checkbox_1  label,.checkbox_2  label {
    cursor: pointer;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: .5rem;
    width: 2.8rem;
    height: 2.8rem;
    box-shadow:.3rem .3rem .6rem var(--greyLight-2), 
    -.2rem -.2rem .5rem var(--white);

}
.checkbox_1 label:hover i,.checkbox_2  label:hover i{
    color: var(--primary);
}
.checkbox_1  label i,.checkbox_2  label i {
    font-size: 1.8rem;
    font-weight: 700;
    color: var(--greyDark);
    transition: .3s ease;
}
.checkbox_1 input:checked~label,.checkbox_2 input:checked~label {
    box-shadow: inset .2rem .2rem .5rem var(--greyLight-2), 
    inset -.2rem -.2rem .5rem var(--white);
}
.checkbox_1 input:checked~label i,.checkbox_2 input:checked~label i {
    color: var(--primary);
}
.radio {
    display: grid;
    grid-column: 1/2;
    grid-template-columns: repeat(2,1fr);
    grid-gap:3rem;
    justify-content: center;
    
    
}
.radio_1,.radio_2{
    display: flex;
    padding-left: 25px;

}
.radio input {
    display: none;
}
.radio_1 input:checked~label,.radio_2 input:checked~label {
    box-shadow: inset .2rem .2rem .5rem var(--greyLight-2), 
    inset -.2rem -.2rem .5rem var(--white);
}
.radio_1 input:checked~label::after,.radio_2 input:checked~label::after {
    background:  var(--primary);
}
.radio_1 label,.radio_2 label {
    box-shadow: .3rem .3rem .6rem var(--greyLight-2), 
    -.2rem -.2rem .5rem var(--white);
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    width: 2.8rem;
    height: 2.8rem;
    border-radius: 50%;


}
.radio_1 label:hover ::after ,.radio_2 label:hover ::after {
    background: var(--primary);
}
.radio_1 label::after,.radio_2 label::after {
    content: '';
    position: absolute;
    width: 1.4rem;
    height: 1.4rem;
    background: var(--greyDark);
    border-radius: 50%;
    transition: 0.3s ease;
}
.btn {
    width: 15rem;
    height: 4rem;
    border-radius: 1rem;
    justify-content: center;
    display: flex;
    align-items: center;
    cursor: pointer;
    transition: .3s ease;
    
}
.btn_primary {
    grid-column: 1/2;
    grid-row: 4/5;
    background: var(--primary);
    box-shadow: inset .2rem .2rem 1rem var(--primary-light),
    inset -.2rem -.2rem 1rem var(--primary-dark),
    .3rem .3rem .6rem var(--greyLight-2), 
    -.2rem -.2rem .5rem var(--white);
    color: var(--greyLight-1);

}
.btn_primary:hover {
    color: var(--white);
}
.btn_primary:active {
    box-shadow: inset .2rem .2rem 1rem var(--primary-dark), 
    inset -.2rem -.2rem 1rem var(--primary-light);
}
.btn_secondary {
    grid-column: 1/2;
    grid-row: 5/6;
    box-shadow: .8rem .8rem 1.4rem var(--greyLight-2),-.2rem -.2rem 1.8rem var(--white);
    color: var(--greyDark);

}
.btn_secondary:hover {
    color: var(--primary);
}
.btn_secondary:active {
    box-shadow: inset .2rem .2rem .5rem var(--greyLight-2), 
    inset -.2rem -.2rem .5rem var(--white);
}
.btn p {
    font-size: 1.6rem;
}
/* Clock */
.clock {
    grid-column: 2/3;
    grid-row: 1/3;
    width: 12rem;
    height: 12rem;
    justify-self: center;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    box-shadow:.3rem .3rem .6rem var(--greyLight-2), 
    -.2rem -.2rem .5rem var(--white);

    
}
/* 一层层的类后面要有空格 */
.clock .hand {
    position: absolute;
    transform-origin: bottom;
    bottom: 6rem;
    border-radius: .2rem;
    z-index: 200;
}
.clock .hours {
    width: .4rem;
    height: 3.2rem;
    background: var(--greyLight-3);
}
.clock .minutes {
    width: 0.4rem;
    height: 4.6rem;
    background: var(--greyDark);
}
.clock .seconds {
    width: 0.2rem;
    height: 5.2rem;
    background: var(--primary);
}
.clock .point {
    position: absolute;
    width: 0.8rem;
    height: 0.8rem;
    border-radius: 50%;
    background: var(--primary);
    z-index: 300;
    

}
.clock .marker {
    width: 95%;
    height: 95%;
    border-radius: 50%;
    position: relative;
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),inset -0.2rem -0.2rem 0.5rem var(--white);
}
.clock .marker::after {
    content:'';
    width: 60%;
    height: 60%;
    border-radius: 50%;
    position: absolute;
    box-shadow: inset 1px 1px 1px var(--greyLight-2),inset -1px -1px 1px var(--white);
    filter:blur(1px);
    top: 20%;
    left: 20%;
}
.clock .marker_1,.clock .marker_2,.clock .marker_3,.clock .marker_4 {
    position: absolute;
    border-radius: 0.1rem;
    box-shadow: inset 1px 1px 1px var(--greyLight-2),inset -1px -1px 1px var(--white);
    
}
.clock .marker_1,.clock .marker_2 {
    width: 0.2rem;
    height: 0.6rem;
    left: 5.6rem;

}
.clock .marker_3,.clock .marker_4{
    width: 0.6rem;
    height: 0.2rem;
    top: 5.6rem;

}
.clock .marker_1 {
    top: 2%;
}
.clock .marker_2 {
    top: 98%;
    transform: translateY(-0.6rem);
}
.clock .marker_3 {
    left: 2%;
}
.clock .marker_4 {
    left: 98%;
    transform: translateX(-0.6rem);
}
.chip {
    grid-column: 2/3;
    grid-row: 3/4;
    justify-self: center;
    width: 17rem;
    height: 4rem;
    border-radius: 1rem;
    box-shadow: .3rem .3rem .6rem var(--greyLight-2), 
    -.2rem -.2rem .5rem var(--white);
    display: flex;
    justify-content: space-between;
    align-items: center;

}
.chip .chip_icon {
    width: 3rem;
    height: 3rem;
    border-radius: 1rem;
    margin:0 0 0 0.2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.8rem;
    color: var(--primary);

}
.chip p {
    font-size: 0.9rem;
    margin-left: -1.8rem;
    color: var(--greyDark);

}
.chip .chip_close {
    width: 1.6rem;
    height: 1.6rem;
    display: flex;
    font-size: 1.6rem;
    color: var(--greyLight-3);
    cursor: pointer;
    margin: 0 0.5rem;

}
.circle {
    grid-column: 2/3;
    grid-row: 4/6;
    width: 9rem;
    height: 100%;
    display: grid; 
    /* 区别justify-self保证circle盒子在该网格单元处居中对齐主轴，justify-items保证该盒子内的内容居中对齐于该盒子的主轴 */
    justify-self: center;
    justify-items: center;
    align-items: center;
    border-radius: 1rem;
    grid-template-columns: 1fr;
    /* margin-left: 6rem; */
}
.circle_btn {
    grid-column: 1/2; 
    grid-row: 1/2; 
    width: 6rem;
    height: 6rem;
    display: flex;
    margin: 0.6rem;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    box-shadow: .3rem .3rem .6rem var(--greyLight-2), 
    -.2rem -.2rem .5rem var(--white);
    cursor: pointer;

    color: var(--primary);
    font-size: 3.2rem;
    position: relative;
    z-index: 300;
    background: var(--greyLight-1);


}
.circle_btn.shadow{
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),inset -0.2rem -0.2rem 0.5rem var(--white);
}
.circle_btn .play {
    position: absolute;
    opacity: 0;
    transition: all 0.2s linear;
}
.circle_btn .play.visibility {
    opacity: 1;
}
.circle_btn .pause {
    position:absolute;
    transition: all 0.2s linear;

}
/* .paused.点的后面不能有空格 */
.circle_btn .pause.visibility{
    opacity: 0;
    
}
.circle_back-1,.circle_back-2 {
    grid-row: 1/2;
    grid-column: 1/2;
    width: 6rem;
    height: 6rem;
    border-radius: 50%;
    filter: blur(1px);
    z-index: 100;
}
.circle_back-1 {
    box-shadow: 0.4rem 0.4rem 0.8rem var(--greyLight-2),-0.4rem -0.4rem 0.8rem var(--white);
    background:  linear-gradient(to bottom right,var(--greyLight-2)0%,var(--white)100%);
    animation: waves 4s linear infinite;
}
.circle_back-1.paused {
    animation-play-state: paused;

} 
.circle_back-2 {
    box-shadow: 0.4rem 0.4rem 0.8rem var(--grayLight-2),-0.4rem -0.4rem 0.8rem var(--white);
    animation: waves 4s linear 2s infinite;
}
.circle_back-2.paused {
    animation-play-state: paused;
}
.form {
    grid-column: 3/4;
    grid-row: 3/4;
}
.form_input {
    width: 20.4rem;
    height: 4rem;
    border: none;
    border-radius: 1rem;
    font-size: 1.4rem;
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),inset -0.2rem -0.2rem 0.5rem var(--white);
    background: none;
    font-family: inherit;
    color: var(--greyDark);
    padding-left: 1.4rem;
}
.form_input::-moz-placeholder {
    color: var(--greyLight-3);
}
.form_input:-ms-input-placeholder {
    color: var(--greyLight-3)
}
.form_input::placeholder {
    color: var(--greyLight-3);

}
   
.form_input:focus {
    outline: none;
    box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2),-0.2rem -0.2rem 0.5rem var(--white);
}
.search {
    grid-column: 3/4;
    grid-row: 2/3;
    position: relative;
    display: flex;
    /* 里面的元素交叉轴居中对齐 */
    align-items: center; 
}
.search_input {
    width: 20.4rem;
    height: 4rem;
    border: none;
    font-size: 1.4rem;
    padding-left: 3.8rem;
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),inset -0.2rem -0.2rem 0.5rem var(--white);
    border-radius: 1rem;
    font-family: inherit;
    color: var(--greyDark);
    background: none;

}
.search_input::placeholder {
    color: var(--greyLight-3);
}
.search_input:focus {
    outline: none;
    box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2),-0.2rem -0.2rem 0.5rem var(--white);

}
.search_input:focus~.search_icon {
    color: var(--primary);

}
.search_icon {
    height: 2rem;
    position: absolute;
    font-size: 2rem;
    padding: 0 1rem;
    display: flex;
    color: var(--greyDark);
    transition: 0.3s ease;
}
.segmented-control {
    grid-column: 3/4;
    grid-row: 1/2;
    width: 20.4rem;
    height: 4rem;
    box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2),-0.2rem -0.2rem 0.5rem var(--white);
    border-radius: 1rem;
    display: flex;
    align-items: center;
    position: relative;
}
.segmented-control input {
    display: none;
}
.segmented-control >input:checked+label {
    transition: all 0.5s ease;
    color: var(--primary);

}
.segmented-control_1,.segmented-control_2,.segmented-control_3 {
    width: 6.8rem;
    height: 3.6rem;
    font-size: 1.4rem;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    color: var(--greyDark);
    transition: all 0.5s ease;
}
.segmented-control_1:hover,.segmented-control_2:hover,.segmented-control_3:hover {
    color: var(--primary);
}
.segmented-control_color {
    position: absolute;
    height: 3.4rem;
    width: 6.2rem;
    margin-left: 0.3rem;
    border-radius: 0.8rem;
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),inset -0.2rem -0.2rem 0.5rem var(--white);
    pointer-events: none;
}
#tab-1:checked ~ .segmented-control_color {
    transform: translateX(0);
    transition: transform 0.3s cubic-bezier(0.645,0.045,0.355,1);
}
#tab-2:checked ~ .segmented-control_color {
    transform: translateX(6.8rem);
    transition: transform 0.3s cubic-bezier(0.645,0.045,0.355,1);
}
#tab-3:checked ~ .segmented-control_color {
    transform: translateX(13.6rem);
    transition: transform 0.3s cubic-bezier(0.645,0.045,0.355,1);
}
.icon {
    grid-column: 3/4;
    grid-row: 4/5;
    display: flex;
    justify-content: space-between;

}
.icon_account,.icon_home,.icon_settings {
    width: 4rem;
    height: 4rem;
    border-radius: 50%;
    box-shadow: 0.3rem 0.3rem 0.6rem var(--greyLight-2),-0.2rem -0.2rem 0.5rem var(--white);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2rem;
    cursor: pointer;
    color: var(--greyDark);
    transition: all 0.5s ease;
}
.icon_account:active,.icon_home:active,.icon_settings:active{
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),inset -0.2rem -0.2rem 0.5rem var(--white);
    color: var(--primary);
}
.icon_account:hover,.icon_home:hover,.icon_settings:hover {
    color: var(--primary);
}
.slider {
    grid-row: 5/6;
    grid-column: 3/4;
    align-self: center;
    display: flex;

}
.slider_box {
    width: 100%;
    height: 1rem;
    cursor: pointer;
    box-shadow:  inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),inset -0.2rem -0.2rem 0.5rem var(--white);
    border-radius: 1rem;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
}
.slider_btn {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    background: var(--white);
    box-shadow:  0px 0.1rem 0.3rem 0px var(--greyLight-3);
    position: absolute;
    z-index: 200;
    display: flex;
    justify-content: center;
    align-content: center;
    
}
.slider_btn:hover~.slider_tooltip {
    opacity: 1;
}
.slider_btn::after {
    content: '';
    position: absolute;
    width: 0.8rem;
    height: 0.8rem;
    border-radius: 50%;
    margin-top: 0.6rem;
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),inset -0.2rem -0.2rem 0.5rem var(--white);
}
.slider_color {
    height: 100%;
    width: 50%;
    position: absolute;
    left: 0;
    z-index: 100;
    border-radius: inherit;
    background: var(--primary);
    background: linear-gradient(-1deg,var(--primary-dark)0%,var(--primary)50%,var(--primary-light)100%);
}
.slider_tooltip {
    position: absolute;
    top: 2rem;
    height: 2.5rem;
    width: 3rem;
    border-radius: 0.6rem;
    font-size: 1.2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--primary);
    box-shadow:  inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),inset -0.2rem -0.2rem 0.5rem var(--white);
    opacity: 0;
    transition: opacity 0.3s ease;
}
@keyframes waves {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        opacity: 1;

    }
    100% {
        transform: scale(2);
        opacity: 0;
    }
}
